###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.9.278/W32 for ARM         23/Aug/2021  12:45:10
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode             
#    Endian            =  little
#    Source file       =
#        C:\Sandbox\Ambiq\Apollo 3
#        Blue\RTOS\Test1\temperature_sensor_2\src\bsp\am_bsp_pins.c
#    Command line      =
#        -f C:\Users\casari\AppData\Local\Temp\1\EWABAB.tmp
#        ("C:\Sandbox\Ambiq\Apollo 3
#        Blue\RTOS\Test1\temperature_sensor_2\src\bsp\am_bsp_pins.c" -D iar -D
#        AM_PART_APOLLO3 -D AM_PACKAGE_BGA -D AM_FREERTOS -D AM_DEBUG_PRINTF -D
#        AM_UTIL_FAULTISR_PRINT -lcN "C:\Sandbox\Ambiq\Apollo 3
#        Blue\RTOS\Test1\temperature_sensor_2\iar\bin" --diag_suppress Pa050 -o
#        "C:\Sandbox\Ambiq\Apollo 3
#        Blue\RTOS\Test1\temperature_sensor_2\iar\bin" --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 --no_path_in_file_macros -e
#        --fpu=VFPv4_sp --dlib_config "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Tools\Ambiq\AmbiqSuite-R2.5.1\third_party\FreeRTOSv10.1.1\Source\include\\
#        -I C:\Tools\Ambiq\AmbiqSuite-R2.5.1\CMSIS\AmbiqMicro\Include\\ -I
#        C:\Tools\Ambiq\AmbiqSuite-R2.5.1\third_party\FreeRTOSv10.1.1\Source\portable\IAR\AMapollo2\\
#        -I C:\Tools\Ambiq\AmbiqSuite-R2.5.1\\ -I
#        C:\Tools\Ambiq\AmbiqSuite-R2.5.1\devices\\ -I
#        C:\Tools\Ambiq\AmbiqSuite-R2.5.1\utils\\ -I "C:\Sandbox\Ambiq\Apollo 3
#        Blue\RTOS\Test1\temperature_sensor_2\iar\..\src\\" -I
#        "C:\Sandbox\Ambiq\Apollo 3
#        Blue\RTOS\Test1\temperature_sensor_2\iar\..\src\RTOS\\" -I
#        "C:\Sandbox\Ambiq\Apollo 3
#        Blue\RTOS\Test1\temperature_sensor_2\iar\..\src\bsp\\" -I
#        C:\Tools\Ambiq\AmbiqSuite-R2.5.1\mcu\apollo3\\ -I
#        C:\Tools\Ambiq\AmbiqSuite-R2.5.1\CMSIS\ARM\Include\\ -I
#        C:\Tools\Ambiq\AmbiqSuite-R2.5.1\boards\apollo3_evb\bsp\\ -I
#        $PROJ_DIR\src\RTOS\\ -I
#        C:\Tools\Ambiq\AmbiqSuite-R2.5.1\mcu\apollo3\hal\\ -Ol)
#    Locale            =  C
#    List file         =
#        C:\Sandbox\Ambiq\Apollo 3
#        Blue\RTOS\Test1\temperature_sensor_2\iar\bin\am_bsp_pins.lst
#    Object file       =
#        C:\Sandbox\Ambiq\Apollo 3
#        Blue\RTOS\Test1\temperature_sensor_2\iar\bin\am_bsp_pins.o
#    Runtime model:       
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\Sandbox\Ambiq\Apollo 3 Blue\RTOS\Test1\temperature_sensor_2\src\bsp\am_bsp_pins.c
      1          //*****************************************************************************
      2          //
      3          //  am_bsp_pins.c
      4          //! @file
      5          //!
      6          //! @brief BSP pin configuration definitions.
      7          //!
      8          //! @addtogroup BSP Board Support Package (BSP)
      9          //! @ingroup BSP
     10          //! @{
     11          //
     12          //*****************************************************************************
     13          
     14          //*****************************************************************************
     15          //
     16          // Copyright (c) 2020, Ambiq Micro, Inc.
     17          // All rights reserved.
     18          //
     19          // Redistribution and use in source and binary forms, with or without
     20          // modification, are permitted provided that the following conditions are met:
     21          //
     22          // 1. Redistributions of source code must retain the above copyright notice,
     23          // this list of conditions and the following disclaimer.
     24          //
     25          // 2. Redistributions in binary form must reproduce the above copyright
     26          // notice, this list of conditions and the following disclaimer in the
     27          // documentation and/or other materials provided with the distribution.
     28          //
     29          // 3. Neither the name of the copyright holder nor the names of its
     30          // contributors may be used to endorse or promote products derived from this
     31          // software without specific prior written permission.
     32          //
     33          // Third party software included in this distribution is subject to the
     34          // additional license terms as defined in the /docs/licenses directory.
     35          //
     36          // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
     37          // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
     38          // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
     39          // ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
     40          // LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
     41          // CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
     42          // SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
     43          // INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
     44          // CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
     45          // ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
     46          // POSSIBILITY OF SUCH DAMAGE.
     47          //
     48          // This is part of revision 2.5.1 of the AmbiqSuite Development Package.
     49          //
     50          //*****************************************************************************
     51          
     52          #include "am_bsp.h"
     53          
     54          //*****************************************************************************
     55          //
     56          //  BUTTON0 pin: Labeled BTN2 on the Apollo3 EVB.
     57          //
     58          //*****************************************************************************
     59          //const am_hal_gpio_pincfg_t g_LCP_BSP_GPIO_BUTTON0 =
     60          //{
     61          //    .uFuncSel            = AM_HAL_PIN_16_GPIO,
     62          //    .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA,
     63          //    .eGPInput            = AM_HAL_GPIO_PIN_INPUT_ENABLE
     64          //};
     65          //
     66          ////*****************************************************************************
     67          ////
     68          ////  BUTTON1 pin: Labeled BTN3 on the Apollo3 EVB.
     69          ////
     70          ////*****************************************************************************
     71          //const am_hal_gpio_pincfg_t g_LCP_BSP_GPIO_BUTTON1 =
     72          //{
     73          //    .uFuncSel            = AM_HAL_PIN_18_GPIO,
     74          //    .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA,
     75          //    .eGPInput            = AM_HAL_GPIO_PIN_INPUT_ENABLE
     76          //};
     77          //
     78          ////*****************************************************************************
     79          ////
     80          ////  BUTTON2 pin: Labeled BTN4 on the Apollo3 EVB.
     81          ////
     82          ////*****************************************************************************
     83          //const am_hal_gpio_pincfg_t g_LCP_BSP_GPIO_BUTTON2 =
     84          //{
     85          //    .uFuncSel            = AM_HAL_PIN_19_GPIO,
     86          //    .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA,
     87          //    .eGPInput            = AM_HAL_GPIO_PIN_INPUT_ENABLE
     88          //};
     89          
     90          
     91          //*****************************************************************************
     92          //
     93          //  IRIDIUM_COM_UART_TX pin: This pin is the IRIDIUM COM_UART transmit pin
     94          //
     95          //*****************************************************************************
     96          const am_hal_gpio_pincfg_t g_LCP_BSP_IRIDIUM_COM_UART_TX = 
     97          {
     98            .uFuncSel             = AM_HAL_PIN_14_UART1TX,
     99            .eDriveStrength       = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    100            
    101          };
    102          
    103          
    104          //*****************************************************************************
    105          //
    106          //  IRIDIUM_COM_UART_RX pin: This pin is the IRIDIUM COM_UART receive pin.
    107          //
    108          //*****************************************************************************
    109          const am_hal_gpio_pincfg_t g_LCP_BSP_IRIDIUM_COM_UART_RX =
    110          {
    111              .uFuncSel            = AM_HAL_PIN_15_UART1RX
    112          };
    113          
    114          
    115          //*****************************************************************************
    116          //
    117          //  IRIDIUM_GPIO_ON pin: This pin is the IRIDIUM Power ON pin
    118          //
    119          //*****************************************************************************
    120          const am_hal_gpio_pincfg_t g_LCP_BSP_IRIDIUM_ON =
    121          {
    122              .uFuncSel            = AM_HAL_PIN_4_GPIO,
    123              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    124          };
    125          
    126          //*****************************************************************************
    127          //
    128          //  IRIDIUM_GPIO_RING_IND pin: This pin is the IRIDIUM Ring Indicator pin
    129          //
    130          //*****************************************************************************
    131          const am_hal_gpio_pincfg_t g_LCP_BSP_IRIDIUM_GPIO_RING_IND =
    132          {
    133              .uFuncSel            = AM_HAL_PIN_22_GPIO,
    134              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA,
    135              .eGPInput            = AM_HAL_GPIO_PIN_INPUT_ENABLE
    136          };
    137          
    138          //*****************************************************************************
    139          //
    140          //  IRIDIUM_GPIO_NET_AVAIL pin: This pin is the IRIDIUM Network Available pin
    141          //
    142          //*****************************************************************************
    143          const am_hal_gpio_pincfg_t g_LCP_BSP_IRIDIUM_NET_AVAIL =
    144          {
    145              .uFuncSel            = AM_HAL_PIN_24_GPIO,
    146              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA,
    147              .eGPInput            = AM_HAL_GPIO_PIN_INPUT_ENABLE
    148          };
    149          
    150          
    151          //*****************************************************************************
    152          //
    153          //  GPS_GPIO_ON pin: This pin is the GPS Power ON pin
    154          //
    155          //*****************************************************************************
    156          const am_hal_gpio_pincfg_t g_LCP_BSP_GPS_ON =
    157          {
    158              .uFuncSel            = AM_HAL_PIN_26_GPIO,
    159              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    160          };
    161          
    162          //*****************************************************************************
    163          //
    164          //  GPS_SDA pin: GPS I2C data signal.
    165          //
    166          //*****************************************************************************
    167          const am_hal_gpio_pincfg_t g_LCP_BSP_GPS_I2C_SDA =
    168          {
    169              .uFuncSel            = AM_HAL_PIN_9_M1SDAWIR3,
    170              .ePullup             = AM_HAL_GPIO_PIN_PULLUP_1_5K,
    171              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_12MA,
    172              .eGPOutcfg           = AM_HAL_GPIO_PIN_OUTCFG_OPENDRAIN,
    173              .uIOMnum             = 0
    174          };
    175          
    176          //*****************************************************************************
    177          //
    178          //  GPS_SCL pin: GPS I2C clk signal.
    179          //
    180          //*****************************************************************************
    181          const am_hal_gpio_pincfg_t g_LCP_BSP_GPS_I2C_SCL =
    182          {
    183              .uFuncSel            = AM_HAL_PIN_8_M1SCL,
    184              .ePullup             = AM_HAL_GPIO_PIN_PULLUP_1_5K,
    185              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_12MA,
    186              .eGPOutcfg           = AM_HAL_GPIO_PIN_OUTCFG_OPENDRAIN,
    187              .uIOMnum             = 0
    188          };
    189          
    190          
    191          //*****************************************************************************
    192          //
    193          //  GPS_GPIO_GPIO pin: This pin is the GPS EXTINT pin
    194          //
    195          //*****************************************************************************
    196          const am_hal_gpio_pincfg_t g_LCP_BSP_GPS_GPIO =
    197          {
    198              .uFuncSel            = AM_HAL_PIN_10_GPIO,
    199              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    200          };
    201          
    202          
    203          
    204          
    205          
    206          
    207          //*****************************************************************************
    208          //
    209          //  ACCEL_SCK pin: Accelermoter SPI SCK signal.
    210          //
    211          //*****************************************************************************
    212          const am_hal_gpio_pincfg_t g_LCP_BSP_ACCEL_SPI_SCK =
    213          {
    214              .uFuncSel            = AM_HAL_PIN_5_M0SCK,
    215              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_12MA,
    216              .uIOMnum             = 0
    217          };
    218          
    219          //*****************************************************************************
    220          //
    221          //  ACCEL_MOSI pin: Accelerometer SPI MOSI signal.
    222          //
    223          //*****************************************************************************
    224          const am_hal_gpio_pincfg_t g_LCP_BSP_ACCEL_SPI_MOSI =
    225          {
    226              .uFuncSel            = AM_HAL_PIN_7_M0MOSI,
    227              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_12MA,
    228              .uIOMnum             = 0
    229          };
    230          
    231          
    232          //*****************************************************************************
    233          //
    234          //  ACCEL_MISO pin: Accelerometer SPI MISO signal.
    235          //
    236          //*****************************************************************************
    237          const am_hal_gpio_pincfg_t g_LCP_BSP_ACCEL_SPI_MISO =
    238          {
    239              .uFuncSel            = AM_HAL_PIN_6_M0MISO,
    240              .uIOMnum             = 0
    241          };
    242          
    243          
    244          //*****************************************************************************
    245          //
    246          //  ACCEL CS pin: Accelerometer chip select.
    247          //
    248          //*****************************************************************************
    249          const am_hal_gpio_pincfg_t g_LCP_BSP_ACCEL_SPI_CS =
    250          {
    251              .uFuncSel            = AM_HAL_PIN_36_GPIO,
    252              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    253          };
    254          
    255          //*****************************************************************************
    256          //
    257          //  ACCEL_INT pin: This pin is the Accelerometer Interrupt pin
    258          //
    259          //*****************************************************************************
    260          const am_hal_gpio_pincfg_t g_LCP_BSP_ACCEL_INT =
    261          {
    262              .uFuncSel            = AM_HAL_PIN_37_GPIO,
    263              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA,
    264              .eGPInput            = AM_HAL_GPIO_PIN_INPUT_ENABLE
    265          };
    266          
    267          
    268          #ifdef INCLUDE_CRYPTO
    269          
    270          
    271          #endif
    272          
    273          #ifdef INCLUDE_ADC24
    274          
    275          
    276          #endif
    277          
    278          
    279          //*****************************************************************************
    280          //
    281          //  PRES_ON pin: This pin is the Pressure Sensor Power ON pin
    282          //
    283          //*****************************************************************************
    284          const am_hal_gpio_pincfg_t g_LCP_BSP_PRES_ON =
    285          {
    286              .uFuncSel            = AM_HAL_PIN_44_GPIO,
    287              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    288          };
    289          
    290          
    291          //*****************************************************************************
    292          //
    293          //  PRES_SDA pin: Pressure Sensor I2C data signal.
    294          //
    295          //*****************************************************************************
    296          const am_hal_gpio_pincfg_t g_LCP_BSP_PRES_I2C_SDA =
    297          {
    298              .uFuncSel            = AM_HAL_PIN_40_M4SDAWIR3,
    299              .ePullup             = AM_HAL_GPIO_PIN_PULLUP_1_5K,
    300              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_12MA,
    301              .eGPOutcfg           = AM_HAL_GPIO_PIN_OUTCFG_OPENDRAIN,
    302              .uIOMnum             = 0
    303          };
    304          
    305          //*****************************************************************************
    306          //
    307          //  PRES_SCL pin: Pressure Sensor I2C clk signal.
    308          //
    309          //*****************************************************************************
    310          const am_hal_gpio_pincfg_t g_LCP_BSP_PRES_I2C_SCL =
    311          {
    312              .uFuncSel            = AM_HAL_PIN_39_M4SCL,
    313              .ePullup             = AM_HAL_GPIO_PIN_PULLUP_1_5K,
    314              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_12MA,
    315              .eGPOutcfg           = AM_HAL_GPIO_PIN_OUTCFG_OPENDRAIN,
    316              .uIOMnum             = 0
    317          };
    318          
    319          
    320          
    321          //*****************************************************************************
    322          //
    323          //  S2U_ON pin: This pin is the Serial-to-UART Power ON pin
    324          //
    325          //*****************************************************************************
    326          const am_hal_gpio_pincfg_t g_LCP_BSP_S2U_ON =
    327          {
    328              .uFuncSel            = AM_HAL_PIN_45_GPIO,
    329              .eGPOutcfg           = AM_HAL_GPIO_PIN_OUTCFG_OPENDRAIN,
    330              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    331          };
    332          
    333          //*****************************************************************************
    334          //
    335          //  S2U_SPI_MISO pin: SPI-to-UART SPI MISO signal.
    336          //
    337          //*****************************************************************************
    338          const am_hal_gpio_pincfg_t g_LCP_BSP_S2U_SPI_MISO =
    339          {
    340              .uFuncSel            = AM_HAL_PIN_43_M3MISO,
    341          //    .ePullup             = AM_HAL_GPIO_PIN_PULLUP_24K,
    342              .uIOMnum             = 3
    343          };
    344          
    345          //*****************************************************************************
    346          //
    347          //  S2U_SPI_MOSI pin: SPI-to-UART SPI MOSI signal.
    348          //
    349          //*****************************************************************************
    350          const am_hal_gpio_pincfg_t g_LCP_BSP_S2U_SPI_MOSI =
    351          {
    352              .uFuncSel            = AM_HAL_PIN_38_M3MOSI,
    353              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_12MA,
    354              .uIOMnum             = 3
    355          };
    356          
    357          //*****************************************************************************
    358          //
    359          //  S2U_SPI_SCK pin: SPI-to-UART SPI SCK signal.
    360          //
    361          //*****************************************************************************
    362          const am_hal_gpio_pincfg_t g_LCP_BSP_S2U_SPI_SCK =
    363          {
    364              .uFuncSel            = AM_HAL_PIN_42_M3SCK,
    365              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_12MA,
    366              .uIOMnum             = 3
    367          };
    368          
    369          //*****************************************************************************
    370          //
    371          //  S2U_SPI_CS pin: SPI-to-UART SPI MOSI Chip Select.
    372          //
    373          //*****************************************************************************
    374          const am_hal_gpio_pincfg_t g_LCP_BSP_S2U_SPI_CS =
    375          {
    376              .uFuncSel            = AM_HAL_PIN_17_GPIO,
    377              .eGPOutcfg           = AM_HAL_GPIO_PIN_OUTCFG_PUSHPULL,
    378              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    379          };
    380          
    381          //*****************************************************************************
    382          //
    383          //  S2U_SPI_NIRQ pin: This pin is the SPI-to-UART Interrupt (negative) pin
    384          //
    385          //*****************************************************************************
    386          const am_hal_gpio_pincfg_t g_LCP_BSP_S2U_SPI_NIRQ =
    387          {
    388              .uFuncSel            = AM_HAL_PIN_18_GPIO,
    389              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA,
    390              .eGPInput            = AM_HAL_GPIO_PIN_INPUT_ENABLE
    391          };
    392          
    393          
    394          //*****************************************************************************
    395          //
    396          //  S2U_SPI_NRESET pin: This pin is the SPI-to-UART Reset pin
    397          //
    398          //*****************************************************************************
    399          const am_hal_gpio_pincfg_t g_LCP_BSP_S2U_SPI_NRESET =
    400          {
    401              .uFuncSel            = AM_HAL_PIN_19_GPIO,
    402              .eGPOutcfg           = AM_HAL_GPIO_PIN_OUTCFG_PUSHPULL,
    403              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA,
    404          //    .eGPInput            = AM_HAL_GPIO_PIN_INPUT_ENABLE
    405          };
    406          
    407          
    408          
    409          //*****************************************************************************
    410          //
    411          //  COM0_POWER_ON pin: This pin is COM0 Output port Power ON pin
    412          //
    413          //*****************************************************************************
    414          const am_hal_gpio_pincfg_t g_LCP_BSP_COM0_POWER_ON =
    415          {
    416              .uFuncSel            = AM_HAL_PIN_11_GPIO,
    417              .eGPOutcfg           = AM_HAL_GPIO_PIN_OUTCFG_OPENDRAIN,
    418              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    419          };
    420          
    421          //*****************************************************************************
    422          //
    423          //  COM1_POWER_ON pin: This pin is COM1 Output port Power ON pin
    424          //
    425          //*****************************************************************************
    426          const am_hal_gpio_pincfg_t g_LCP_BSP_COM1_POWER_ON =
    427          {
    428              .uFuncSel            = AM_HAL_PIN_12_GPIO,
    429              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    430          };
    431          
    432          //*****************************************************************************
    433          //
    434          //  COM2_POWER_ON pin: This pin is COM2 Output port Power ON pin
    435          //
    436          //*****************************************************************************
    437          const am_hal_gpio_pincfg_t g_LCP_BSP_COM2_POWER_ON =
    438          {
    439              .uFuncSel            = AM_HAL_PIN_13_GPIO,
    440              
    441              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    442          };
    443          
    444          //*****************************************************************************
    445          //
    446          //  COM3_POWER_ON pin: This pin is COM3 Output port Power ON pin
    447          //
    448          //*****************************************************************************
    449          const am_hal_gpio_pincfg_t g_LCP_BSP_COM3_POWER_ON =
    450          {
    451              .uFuncSel            = AM_HAL_PIN_34_GPIO,
    452              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    453          };
    454          
    455          
    456          
    457          #ifdef INCLUDE_IMU
    458          
    459          #endif
    460          
    461          
    462          //*****************************************************************************
    463          //
    464          //  LED1 pin.
    465          //
    466          //*****************************************************************************
    467          const am_hal_gpio_pincfg_t g_LCP_BSP_GPIO_LED1 =
    468          {
    469              .uFuncSel            = AM_HAL_PIN_31_GPIO,
    470              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA,
    471          //    .ePowerSw            = AM_HAL_GPIO_PIN_POWERSW_VSS
    472              .eGPOutcfg           = AM_HAL_GPIO_PIN_OUTCFG_PUSHPULL
    473          };
    474          
    475          //*****************************************************************************
    476          //
    477          //  LED2 pin.
    478          //
    479          //*****************************************************************************
    480          const am_hal_gpio_pincfg_t g_LCP_BSP_GPIO_LED2 =
    481          {
    482              .uFuncSel            = AM_HAL_PIN_32_GPIO,
    483              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    484          };
    485          
    486          //*****************************************************************************
    487          //
    488          //  LED3 pin.
    489          //
    490          //*****************************************************************************
    491          const am_hal_gpio_pincfg_t g_LCP_BSP_GPIO_LED3 =
    492          {
    493              .uFuncSel            = AM_HAL_PIN_29_GPIO,
    494              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    495          };
    496          
    497          //*****************************************************************************
    498          //
    499          //  SC_NSHDN pin: This pin is Super Capacitor Shutdown (negative) pin
    500          //
    501          //*****************************************************************************
    502          const am_hal_gpio_pincfg_t g_LCP_BSP_SC_NSHDN =
    503          {
    504              .uFuncSel            = AM_HAL_PIN_0_GPIO,
    505              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    506          };
    507          
    508          //*****************************************************************************
    509          //
    510          //  SC_PGOOD pin: This pin is Super Capacitor Power Good pin
    511          //
    512          //*****************************************************************************
    513          const am_hal_gpio_pincfg_t g_LCP_BSP_SC_PGOOD =
    514          {
    515              .uFuncSel            = AM_HAL_PIN_28_GPIO,
    516              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    517          };
    518          
    519          
    520          //*****************************************************************************
    521          //
    522          //  SC_ON pin: This pin is Super Capacitor Power On pin
    523          //
    524          //*****************************************************************************
    525          const am_hal_gpio_pincfg_t g_LCP_BSP_SC_ON =
    526          {
    527              .uFuncSel            = AM_HAL_PIN_1_GPIO,
    528              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    529          };
    530          
    531          
    532          
    533          //*****************************************************************************
    534          //
    535          //  CONSOLE_TX pin: This pin is the Console UART transmit pin.
    536          //
    537          //*****************************************************************************
    538          const am_hal_gpio_pincfg_t g_LCP_BSP_UART_CONSOLE_TX =
    539          {
    540              .uFuncSel            = AM_HAL_PIN_48_UART0TX,
    541              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    542          };
    543          
    544          //*****************************************************************************
    545          //
    546          //  CONSOLE_RX pin: This pin is the Console UART receive pin.
    547          //
    548          //*****************************************************************************
    549          const am_hal_gpio_pincfg_t g_LCP_BSP_UART_CONSOLE_RX =
    550          {
    551              .uFuncSel            = AM_HAL_PIN_49_UART0RX
    552          };
    553          
    554          
    555          #ifdef INCLUDE_ADC_VOLT_BUS
    556          //*****************************************************************************
    557          //
    558          //  BUS_VOLT_ENABLE pin: This pin is Bus Voltage Read Enable pin
    559          //
    560          //*****************************************************************************
    561          const am_hal_gpio_pincfg_t g_LCP_BSP_BUS_VOLT_ENABLE =
    562          {
    563              .uFuncSel            = AM_HAL_PIN_23_GPIO,
    564              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    565          };
    566          
    567          //*****************************************************************************
    568          //
    569          //  BUS_VOLTAGE pin: This pin is the Bus Voltage Read Pin
    570          //
    571          //*****************************************************************************
    572          const am_hal_gpio_pincfg_t g_LCP_BSP_BUS_VOLTAGE =
    573          {
    574              .uFuncSel            = AM_HAL_PIN_35_ADCSE7,
    575          };
    576          #endif // INCLUDE_ADC_VOLT_BUS
    577          
    578          
    579          
    580          
    581          
    582          //*****************************************************************************
    583          //
    584          //  PWR_CTRL_ENABLE pin: This pin is the Power Control(piston) Enable pin
    585          //
    586          //*****************************************************************************
    587          const am_hal_gpio_pincfg_t g_LCP_BSP_PWR_CTRL_EN =
    588          {
    589              .uFuncSel            = AM_HAL_PIN_2_GPIO,
    590              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    591          };
    592          
    593          
    594          //*****************************************************************************
    595          //
    596          //  PRES_SDA pin: Pressure Sensor I2C data signal.
    597          //
    598          //*****************************************************************************
    599          const am_hal_gpio_pincfg_t g_LCP_BSP_I2C_CTRL_I2C_SDA =
    600          {
    601              .uFuncSel            = AM_HAL_PIN_25_M2SDAWIR3,
    602              .ePullup             = AM_HAL_GPIO_PIN_PULLUP_1_5K,
    603              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_12MA,
    604              .eGPOutcfg           = AM_HAL_GPIO_PIN_OUTCFG_OPENDRAIN,
    605              .uIOMnum             = 0
    606          };
    607          
    608          //*****************************************************************************
    609          //
    610          //  PRES_SCL pin: Pressure Sensor I2C clk signal.
    611          //
    612          //*****************************************************************************
    613          const am_hal_gpio_pincfg_t g_LCP_BSP_I2C_CTRL_SCL =
    614          {
    615              .uFuncSel            = AM_HAL_PIN_27_M2SCL,
    616              .ePullup             = AM_HAL_GPIO_PIN_PULLUP_1_5K,
    617              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_12MA,
    618              .eGPOutcfg           = AM_HAL_GPIO_PIN_OUTCFG_OPENDRAIN,
    619              .uIOMnum             = 0
    620          };
    621          
    622          
    623          
    624          
    625          
    626          
    627          
    628          
    629          
    630          
    631          
    632          
    633          
    634          
    635          
    636          //*****************************************************************************
    637          //
    638          //  ITM_SWO pin: ITM Serial Wire Output.
    639          //
    640          //*****************************************************************************
    641          const am_hal_gpio_pincfg_t g_LCP_BSP_GPIO_ITM_SWO =
    642          {
    643          //    .uFuncSel            = AM_HAL_PIN_41_SWO,
    644              .uFuncSel           = AM_HAL_PIN_33_SWO,
    645              .eDriveStrength      = AM_HAL_GPIO_PIN_DRIVESTRENGTH_2MA
    646          };
    647          
    648          //*****************************************************************************
    649          //
    650          //  SWDCK pin: Cortex Serial Wire DCK.
    651          //
    652          //*****************************************************************************
    653          const am_hal_gpio_pincfg_t g_LCP_BSP_GPIO_SWDCK =
    654          {
    655              .uFuncSel            = AM_HAL_PIN_20_SWDCK
    656          };
    657          
    658          //*****************************************************************************
    659          //
    660          //  SWDIO pin: Cortex Serial Wire DIO.
    661          //
    662          //*****************************************************************************
    663          const am_hal_gpio_pincfg_t g_LCP_BSP_GPIO_SWDIO =
    664          {
    665              .uFuncSel            = AM_HAL_PIN_21_SWDIO
    666          };
    667          
    668          //*****************************************************************************
    669          //
    670          // End Doxygen group.
    671          //! @}
    672          //
    673          //*****************************************************************************


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  g_LCP_BSP_ACCEL_INT
       4  g_LCP_BSP_ACCEL_SPI_CS
       4  g_LCP_BSP_ACCEL_SPI_MISO
       4  g_LCP_BSP_ACCEL_SPI_MOSI
       4  g_LCP_BSP_ACCEL_SPI_SCK
       4  g_LCP_BSP_COM0_POWER_ON
       4  g_LCP_BSP_COM1_POWER_ON
       4  g_LCP_BSP_COM2_POWER_ON
       4  g_LCP_BSP_COM3_POWER_ON
       4  g_LCP_BSP_GPIO_ITM_SWO
       4  g_LCP_BSP_GPIO_LED1
       4  g_LCP_BSP_GPIO_LED2
       4  g_LCP_BSP_GPIO_LED3
       4  g_LCP_BSP_GPIO_SWDCK
       4  g_LCP_BSP_GPIO_SWDIO
       4  g_LCP_BSP_GPS_GPIO
       4  g_LCP_BSP_GPS_I2C_SCL
       4  g_LCP_BSP_GPS_I2C_SDA
       4  g_LCP_BSP_GPS_ON
       4  g_LCP_BSP_I2C_CTRL_I2C_SDA
       4  g_LCP_BSP_I2C_CTRL_SCL
       4  g_LCP_BSP_IRIDIUM_COM_UART_RX
       4  g_LCP_BSP_IRIDIUM_COM_UART_TX
       4  g_LCP_BSP_IRIDIUM_GPIO_RING_IND
       4  g_LCP_BSP_IRIDIUM_NET_AVAIL
       4  g_LCP_BSP_IRIDIUM_ON
       4  g_LCP_BSP_PRES_I2C_SCL
       4  g_LCP_BSP_PRES_I2C_SDA
       4  g_LCP_BSP_PRES_ON
       4  g_LCP_BSP_PWR_CTRL_EN
       4  g_LCP_BSP_S2U_ON
       4  g_LCP_BSP_S2U_SPI_CS
       4  g_LCP_BSP_S2U_SPI_MISO
       4  g_LCP_BSP_S2U_SPI_MOSI
       4  g_LCP_BSP_S2U_SPI_NIRQ
       4  g_LCP_BSP_S2U_SPI_NRESET
       4  g_LCP_BSP_S2U_SPI_SCK
       4  g_LCP_BSP_SC_NSHDN
       4  g_LCP_BSP_SC_ON
       4  g_LCP_BSP_SC_PGOOD
       4  g_LCP_BSP_UART_CONSOLE_RX
       4  g_LCP_BSP_UART_CONSOLE_TX

 
 168 bytes in section .rodata
 
 168 bytes of CONST memory

Errors: none
Warnings: none
